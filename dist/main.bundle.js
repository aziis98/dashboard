!function(t){function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}var e={};n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},n.p="",n(n.s=0)}([function(t,n,e){e(1),t.exports=e(14)},function(t,n,e){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var o=e(2),a=i(o),s=e(3),u=i(s),d=(e(4),e(6),e(8),e(11),e(12),e(13),new Vue({el:"#app",data:{widgets:{},pan:{x:.5*innerWidth,y:.5*innerHeight},panning:!1,mouse:{dx:0,dy:0},lastMouseEvent:null},created:function(){localStorage.getItem("dashboard")?this.load():(localStorage.setItem("dashboard","true"),this.load(u.default))},methods:{onPanStart:function(t){t.target===this.$el&&(this.panning=!0)},onMouseMove:function(t){this.lastMouseEvent&&(this.mouse={dx:t.clientX-this.lastMouseEvent.clientX,dy:t.clientY-this.lastMouseEvent.clientY}),t.target===this.$el&&this.panning&&(this.pan={x:this.pan.x+this.mouse.dx,y:this.pan.y+this.mouse.dy}),this.lastMouseEvent=t},onPanEnd:function(t){var n=this;this.panning=!1,this.save(),t.target===this.$el&&Object.keys(this.widgets).forEach(function(t){n.widgets[t].focused=!1})},load:function(t){var n=this,e=JSON.parse(t||localStorage.getItem("dashboard-store")),i=e.widgets,r=e.pan;this.widgets=i,this.pan=r,Object.keys(this.widgets).forEach(function(t){n.widgets[t].focused=!1})},save:function(){this.panning||(console.log("Saving state!"),localStorage.setItem("dashboard-store",JSON.stringify({widgets:this.widgets,pan:this.pan})))},addWidget:function(t,n){var e=a.default.createWidget(this.pan,t,n);this.widgets=Object.assign({},this.widgets,r({},e.uid,e)),this.$forceUpdate()},onWidgetRemoved:function(t){Vue.delete(this.widgets,t),this.save()},onWidgetSelected:function(t){var n=this;this.widgets[t]&&(Object.keys(this.widgets).forEach(function(t){n.widgets[t].focused=!1}),this.widgets[t].focused=!0)}}}));window.ww=a.default,window.app=d},function(t,n,e){"use strict";function i(){return"widget-"+Math.floor(Math.random()*Math.pow(16,10)).toString(16).padStart(10,"0")}function r(t,n,e){return Object.assign({uid:i(),location:{x:-t.x+.5*innerWidth,y:-t.y+.5*innerHeight},type:n,focused:!1,far:!1},o[n](e))}Object.defineProperty(n,"__esModule",{value:!0});var o={note:function(t){var n=t.note,e=void 0===n?"I'm a note!":n,i=t.align,r=void 0===i?"left":i;t.monospaced;return{note:e,align:r}},dynamic:function(t){var n=t.script,e=void 0===n?"'I\\'m a new Dynamic! See: ' + Math.floor(Math.random() * 10)":n,i=t.updateIntervalSeconds;return{script:e,updateIntervalSeconds:void 0===i?.1:i,fnInputs:[]}}};n.default={createWidget:r}},function(t,n){t.exports='{\r\n    "widgets": {\r\n        "widget-9fe90d6d91": {\r\n            "uid": "widget-9fe90d6d91",\r\n            "location": {\r\n                "x": 246,\r\n                "y": -749\r\n            },\r\n            "type": "dynamic",\r\n            "script": "moment().format(\'DD MMMM Y\')",\r\n            "updateIntervalSeconds": "1",\r\n            "focused": false,\r\n            "fnInputs": []\r\n        },\r\n        "widget-79e179b39f": {\r\n            "uid": "widget-79e179b39f",\r\n            "location": {\r\n                "x": 748,\r\n                "y": -748\r\n            },\r\n            "type": "note",\r\n            "focused": false,\r\n            "note": "Dashboard | Introduction\\n\\nI\'m aziis98 (Antonio De Lucreziis) and this is a dashboard for keeping notes, timers and more things like those.\\n\\nHere you can see two notes and a clock. Widgets can be added from the menu above. You can move widgets by dragging them around. Try to move some widgets. As you see there is a very fine grid to keep things a bit tidier.\\n\\nWhen a note becomes long (about over 10 lines) the first line will be used as a title like this one.\\n\\nNotes can be very long so at a certain point they stop growing vertically and instead a scrollbar appears.\\n\\nOh, and by the way, everything is saved to localStorage so if you change something it will remain even if you reload the page.\\n\\nYou can also pan around indefinitely.\\n\\nEnd of this note\\n\\n\\n\\n\\n",\r\n            "align": "left"\r\n        },\r\n        "widget-69de7e8642": {\r\n            "uid": "widget-69de7e8642",\r\n            "location": {\r\n                "x": 247,\r\n                "y": -623\r\n            },\r\n            "type": "dynamic",\r\n            "focused": false,\r\n            "script": "moment().format(\'HH:mm:ss\')",\r\n            "updateIntervalSeconds": "1",\r\n            "fnInputs": []\r\n        },\r\n        "widget-be6c836beb": {\r\n            "uid": "widget-be6c836beb",\r\n            "location": {\r\n                "x": 246,\r\n                "y": -497\r\n            },\r\n            "type": "dynamic",\r\n            "focused": false,\r\n            "script": "\'You have \' + moment(\'01/01/2018\', \'DD/MM/YYYY\').diff(moment(), \'days\') + \' more days till the end of the year\'",\r\n            "updateIntervalSeconds": "60",\r\n            "fnInputs": []\r\n        },\r\n        "widget-ca80544d31": {\r\n            "uid": "widget-ca80544d31",\r\n            "location": {\r\n                "x": 1248,\r\n                "y": -748\r\n            },\r\n            "type": "dynamic",\r\n            "focused": false,\r\n            "script": "(a, b) => \'a + b = \' + (a + b)",\r\n            "updateIntervalSeconds": 0.1,\r\n            "fnInputs": [\r\n                {\r\n                    "name": "a",\r\n                    "value": ""\r\n                },\r\n                {\r\n                    "name": "b",\r\n                    "value": "5"\r\n                }\r\n            ]\r\n        },\r\n        "widget-164f3e9e42": {\r\n            "uid": "widget-164f3e9e42",\r\n            "location": {\r\n                "x": 1245.5,\r\n                "y": -572\r\n            },\r\n            "type": "dynamic",\r\n            "focused": false,\r\n            "script": "let fac = (n) => n < 1 ? 1 : (n * fac(n - 1)) ; (n) => n + \'! = \' + fac(n || 0)",\r\n            "updateIntervalSeconds": "0",\r\n            "fnInputs": [\r\n                {\r\n                    "name": "n",\r\n                    "value": "10"\r\n                }\r\n            ]\r\n        },\r\n        "widget-f3c5be2606": {\r\n            "uid": "widget-f3c5be2606",\r\n            "location": {\r\n                "x": 249.5,\r\n                "y": -334\r\n            },\r\n            "type": "note",\r\n            "focused": false,\r\n            "note": "Dashboard | Javascript Dynamic Widgets\\n\\nA Dynamic Widget can be created from the \'New Widget\' menu on the toolbar.\\n\\nYou can edit the script of a Dynamic by double-clicking it, it will show a menu with some options. All widget when double-clicked show a trash that deletes the widget and a question mark for more info on the widget.\\n\\nInside a Dynamic there are two inputs, the first is for setting how often it will update in seconds (if you set it to 0 it won\'t update at all!) while the second is for the script itself. Also hover on the question mark for a quick reference of the aviable commands.\\n\\nIf you set the script to be an arrow function instead of evaluating immediately, you will get a list of parameters as inputs (see on the top-right the sum and the factorial examples) that will be passed as inputs to the arrow function when they change.\\n\\nFor simplifying things if a valid number is passed to the arrow function it is automatically converted to a Number to avoid conversion within the function itself.\\n\\n\\n\\n\\n\\n",\r\n            "align": "left"\r\n        },\r\n        "widget-fa47895918": {\r\n            "uid": "widget-fa47895918",\r\n            "location": {\r\n                "x": 1245,\r\n                "y": -369\r\n            },\r\n            "type": "note",\r\n            "focused": false,\r\n            "note": "// This has been linked with the $ref\\n// method, look below to see how that works\\n\\n// last expression returns\\nMath\\n.floor(Math.random() * Math.pow(36, 10))\\n.toString(36)\\n\\n",\r\n            "align": "left",\r\n            "monospaced": true\r\n        },\r\n        "widget-5b58d1f3dc": {\r\n            "uid": "widget-5b58d1f3dc",\r\n            "location": {\r\n                "x": 1248,\r\n                "y": -148\r\n            },\r\n            "type": "dynamic",\r\n            "focused": false,\r\n            "script": "eval($ref(\'widget-fa47895918\').note)",\r\n            "updateIntervalSeconds": "10",\r\n            "fnInputs": []\r\n        }\r\n    },\r\n    "pan": {\r\n        "x": -237.5,\r\n        "y": 807\r\n    }\r\n}'},function(t,n,e){"use strict";var i=e(5),r=function(t){return t&&t.__esModule?t:{default:t}}(i);Vue.component("button-remove",{template:r.default,data:function(){return{Tooltip:Tooltip}}})},function(t,n){t.exports='<button \r\n    @mouseenter="Tooltip.showAtElement($event.target, \'Remove this widget\')"\r\n    @mouseleave="Tooltip.hide()"\r\n    @click="Tooltip.hide(); $emit(\'click\')"\r\n    ><i class="fa fa-trash" aria-hidden="true"></i>\r\n</button>'},function(t,n,e){"use strict";var i=e(7),r=function(t){return t&&t.__esModule?t:{default:t}}(i);Vue.component("note",{template:r.default,props:{input:Object,focused:Boolean},data:function(){return{Tooltip:Tooltip}},computed:{lines:function(){return this.input.note.split("\n")}},methods:{copyUID:function(){document.querySelector("#tooltip textarea").select(),document.execCommand("copy")}}})},function(t,n){t.exports='<div class="note">\r\n\r\n    <div v-if="input.focused" class="options">\r\n        <div>\r\n            <div class="group">\r\n                <button @click="input.align = \'left\'"><i class="fa fa-align-left" aria-hidden="true"></i></button>\r\n                <button @click="input.align = \'center\'"><i class="fa fa-align-center" aria-hidden="true"></i></button>\r\n                <button @click="input.align = \'right\'"><i class="fa fa-align-right" aria-hidden="true"></i></button>\r\n            </div>\r\n\r\n            <input id="opt-mono" type="checkbox" v-model="input.monospaced">\r\n            <label for="opt-mono" class="font-monospaced">Monospaced Font</label>\r\n        </div>\r\n\r\n        <div>\r\n            <button \r\n                class="question"\r\n                @mouseenter="Tooltip.showAtElement($event.target, { html: \'<p>Click to copy the uid to the clipboard: <textarea>\' + input.uid + \'</textarea></p>\' })"\r\n                @mouseleave="Tooltip.hide()"\r\n                @click="copyUID()"\r\n                ><i class="fa fa-question" aria-hidden="true"></i></button>\r\n            \r\n            <button-remove @click="$emit(\'removed\')"></button-remove>\r\n        </div>\r\n    </div>\r\n\r\n    <div \r\n        :class="[ \'title\', { \'font-monospaced\': input.monospaced } ]"\r\n        :style="{ textAlign: input.align }"\r\n        v-if="lines.length > 10 && lines[0].trim().length > 0"\r\n        >{{lines[0]}}</div>\r\n\r\n    <textarea\r\n        :class="{ \'font-monospaced\': input.monospaced }"\r\n        :style="{ textAlign: input.align }"\r\n        v-model="input.note"\r\n        :rows="lines.length"\r\n        ></textarea>\r\n</div>'},function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _toConsumableArray(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}function $args(t){return t.toString().match(/\((.+?)\) =>/)[1].split(",").map(function(t){return t.trim()})}function $valueify(t){var n=Number(t);return isNaN(n)?t:n}function $ref(t){if(app&&app.widgets)return app.widgets[t]}var _dynamicVue=__webpack_require__(9),_dynamicVue2=_interopRequireDefault(_dynamicVue),_explainScript=__webpack_require__(10),_explainScript2=_interopRequireDefault(_explainScript);window.$args=$args,Vue.component("dynamic",{template:_dynamicVue2.default,props:{input:Object,focused:Boolean},data:function(){return{timer:null,isFn:!1,result:"",Tooltip:Tooltip}},watch:{"input.updateIntervalSeconds":function(){this.teardownTimer(),this.setupTimer()},"input.script":function(){this.teardownTimer(),this.updateFnInputs(),this.setupTimer()},"input.fnInputs":{handler:function(){this.evalScript(),this.$emit("updated")},deep:!0}},mounted:function(){this.updateFnInputs(),this.setupTimer()},beforeDestroy:function(){this.teardownTimer()},methods:{setupTimer:function(){var t=this;this.input.updateIntervalSeconds>0?this.timer=setInterval(function(){t.evalScript()},1e3*this.input.updateIntervalSeconds):this.timer=null,this.evalScript()},teardownTimer:function(){this.timer&&clearInterval(this.timer)},updateFnInputs:function updateFnInputs(){var _this2=this,result=void 0;try{result=eval(this.input.script)}catch(t){result="error"}if("function"==typeof result){var names=$args(result);this.isFn=names.length>0,this.input.fnInputs.map(function(t){return t.name})!==names&&(this.input.fnInputs=names.map(function(t,n){return{name:t,value:_this2.input.fnInputs[n].value||""}}))}else"error"!==result&&(this.input.fnInputs=[])},evalScript:function evalScript(){try{var evaluatedScript=eval(this.input.script);if(this.isFn){var args=this.input.fnInputs.map(function(t){return $valueify(t.value)});this.result=evaluatedScript.apply(void 0,_toConsumableArray(args)).toString()}else this.result=evaluatedScript.toString()}catch(t){this.result=t.message}},showTooltip:function(t){Tooltip.showAtElement(t,{html:_explainScript2.default})}}})},function(t,n){t.exports='<div class="dynamic">\r\n\r\n    <div v-if="input.focused" class="options">\r\n        <input class="interval" type="text" v-model="input.updateIntervalSeconds" title="The update interval in seconds">\r\n\r\n        <div class="group">\r\n            <input type="text" v-model="input.script" title="The script to execute">\r\n            <button \r\n                class="question"\r\n                @mouseenter="showTooltip($event.target)"\r\n                @mouseleave="Tooltip.hide()"\r\n                ><i class="fa fa-question" aria-hidden="true"></i></button>\r\n        </div>\r\n\r\n        <button-remove @click="$emit(\'removed\')"></button-remove>\r\n    </div>\r\n\r\n    <div class="computed">\r\n        <div class="inputs">\r\n            <input\r\n                type="text"\r\n                v-for="fnInput in input.fnInputs" \r\n                v-model="fnInput.value" \r\n                :placeholder="fnInput.name"\r\n                \r\n                @mouseenter="Tooltip.show($event.target, fnInput.name)"\r\n                @mouseleave="Tooltip.hide()"\r\n                >\r\n        </div>\r\n\r\n        <div class="result">{{result}}</div>\r\n    </div>\r\n\r\n</div>'},function(t,n){t.exports='<div class="title">\r\n    Scripting\r\n</div>\r\n<p>\r\n    If The update interval is different from <code>0</code> this code will be executed based on the given interval. What\r\n    the script procduces as a result is rendered below as text. Formatted content is not yet supported. If the script contains\r\n    an arrow function, for every parameter an input field will be rendered and the result of the arrow function with the\r\n    given input will be rendered.\r\n</p>\r\n<div class="title">\r\n    One line isn\'t enough!\r\n</div>\r\n<p>\r\n    If you feel that one line is not enough you can use the text present in another note by placeing a reference in the following\r\n    way:\r\n</p>\r\n<pre>\r\n    <code>\r\n        eval($ref(\'note-db29ef329\').note)\r\n    </code>\r\n</pre>'},function(t,n,e){"use strict";Vue.component("widget",{template:"#widget-template",props:{input:{type:Object},mouse:Object,pan:Object},data:function(){return{lastMouseEvent:null,dragging:!1}},created:function(){},updated:function(){this.$emit("updated")},methods:{snap:function(t){return 5*Math.floor(t/5)},onDragStart:function(){this.dragging=!0},onDragEnd:function(){this.dragging=!1}},watch:{mouse:function(t){this.dragging&&(this.input.location={x:this.input.location.x+t.dx,y:this.input.location.y+t.dy})}}})},function(t,n,e){"use strict";Vue.component("toolbar",{template:"#toolbar-template"}),Vue.component("tool",{template:"#tool-template",props:["name"],computed:{isEmpty:function(){return!this.$slots.default}}})},function(t,n,e){"use strict";var i={"bottom-center":function(t){return{x:t.left+.5*t.width,y:t.top+t.height+4}},"center-left":function(t){return{x:t.left-4,y:t.top+.5*t.height}}},r=new Vue({el:"#tooltip",data:{isShown:!1,x:400,y:400,message:"Tooltip di prova",position:"bottom-center"},methods:{showAtPosition:function(t,n,e){arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.isShown=!0,this.message=e,this.x=t,this.y=n},showAtElement:function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"bottom-center",r=t.getBoundingClientRect(),o=i[e](r),a=o.x,s=o.y;this.showAtPosition(a,s,n,e)},show:function(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"bottom-center";this.showAtElement(t,n,e)},hide:function(){this.isShown=!1}}});window.Tooltip=r},function(t,n){}]);